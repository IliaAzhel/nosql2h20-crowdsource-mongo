version: '2.2'

services:

  flask:
    build:
      context: ./services/backend
      dockerfile: Dockerfile
    container_name: flask
    restart: unless-stopped
    ports:
      - 5000:5000
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "False"
      APP_PORT: 5000
      MONGODB_DATABASE: flaskdb
      MONGODB_USERNAME: flask
      MONGODB_PASSWORD: 12344321
      MONGODB_HOSTNAME: mongodb
    volumes:
      - ./services/backend:/usr/src/app
    depends_on:
      - mongodb
    networks:
      - frontend
      - backend
    links:
      - mongodb

  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin-user
      MONGO_INITDB_ROOT_PASSWORD: admin-password
      MONGODB_DATABASE: flaskdb
      MONGODB_USERNAME: flask
      MONGODB_PASSWORD: 12344321
      DB_PASSWORD: 12344321
    volumes:
      #- db-data:/data/db
      - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh
    ports:
      - "27017:27017"
#    volumes:
#      - ./mongo-mongo-init.js:/docker-entrypoint-initdb.d/mongo-mongo-init.js:ro
    networks:
      - frontend
      - backend


  nginx:
    build:
      context: ./services/web
      dockerfile: Dockerfile
    restart: always
    ports:
      - 4433:443
    volumes:
      - nginxdata:/var/log/nginx
    depends_on:
      - flask
    networks:
      - frontend

  frontend:
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
    volumes:
      - './services/frontend/app:/app'
      - '/app/node_modules'
    ports:
      - 3007:8080
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
      - BACKEND_SERVICE_URL=http://127.0.0.1:5001
      - VUE_GATEWAY_URL=http://127.0.0.1:3007

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mongodbdata:
    driver: local
  appdata:
    driver: local
  nginxdata:
    driver: local
